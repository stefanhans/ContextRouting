



Network Working Group                                        Stefan Hans
Internet-Draft                                           January 9, 2016
Intended status: Experimental
Expires: July 12, 2016


         Concepts of Contextinformation Routing Networks (CRNs)
                        DraftRFC_ContextRouting

Abstract

   Contextinformation Routing Network (CRN) is a communication framework
   enabling an universal service to join matching contextinformation
   respectively its communication partners.  This document describes the
   concepts of CRNs by explaining its main components, which are

   o  Contextinformation (CI)

   o  Contextinformation Coding (CIC)

   o  Contextinformation Packet (CIP)

   o  Contextinformation Routing (CIR)

   This document does not cover concrete specifications or requirements
   in detail.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on July 12, 2016.








Stefan Hans               Expires July 12, 2016                 [Page 1]

Internet-Draft     Contextinformation Routing Networks      January 2016


Copyright Notice

   Copyright (c) 2016 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Motivation  . . . . . . . . . . . . . . . . . . . . . . . . .   4
   3.  Contextinformation Coding (CIC) . . . . . . . . . . . . . . .   4
     3.1.  Internal Structure  . . . . . . . . . . . . . . . . . . .   5
       3.1.1.  CIC-Brick . . . . . . . . . . . . . . . . . . . . . .   5
       3.1.2.  CIC-Number  . . . . . . . . . . . . . . . . . . . . .   5
       3.1.3.  CIC-Spam and CIC-Padding  . . . . . . . . . . . . . .   6
     3.2.  Limitations . . . . . . . . . . . . . . . . . . . . . . .   6
     3.3.  Boolean Operations  . . . . . . . . . . . . . . . . . . .   6
     3.4.  Types of CIC-Rulesets . . . . . . . . . . . . . . . . . .   6
     3.5.  Deployment of CIC-Rulesets  . . . . . . . . . . . . . . .   7
     3.6.  Emergence and Future Use  . . . . . . . . . . . . . . . .   7
   4.  Contextinformation Packet (CIP) . . . . . . . . . . . . . . .   7
     4.1.  Header Data . . . . . . . . . . . . . . . . . . . . . . .   8
     4.2.  Contextinformation  . . . . . . . . . . . . . . . . . . .   8
     4.3.  Client Data . . . . . . . . . . . . . . . . . . . . . . .   8
   5.  Contextinformation Routing (CIR)  . . . . . . . . . . . . . .   8
     5.1.  Overlay Network . . . . . . . . . . . . . . . . . . . . .   8
     5.2.  Encoded CI Routing  . . . . . . . . . . . . . . . . . . .   8
     5.3.  Client's Network Address Updates  . . . . . . . . . . . .   8
     5.4.  CIC-Ruleset Request Routing . . . . . . . . . . . . . . .   9
     5.5.  Metadata  . . . . . . . . . . . . . . . . . . . . . . . .   9
   6.  Informative References  . . . . . . . . . . . . . . . . . . .   9
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .   9

1.  Introduction

   It all began thinking about context-aware services.  Here, context-
   awareness shouldn't be limited to location-based aspects, but it
   should cover any kind of context.  Concepts for an open, unrestricted
   and flexible structure to support context-aware services had to be



Stefan Hans               Expires July 12, 2016                 [Page 2]

Internet-Draft     Contextinformation Routing Networks      January 2016


   developed.  It should not only be applicable for established
   services, but also ready for the emergence of new ones.  For this
   purpose I was asking myself mainly the following questions:

      How can a framework connect communication partners with matching
      communication interests and context?

      How can it be open for all types of interests and context?

      How can it be open for presently unknown extensions?

      How can it be organized to maximize the availabilty of the
      service?

      How can it be organized to minimize the customizing effort for its
      clients?
   Let me now introduce the main concepts:

   Contextinformation (CI)
             Due to the lack of an useful clear distinction between the
             terms information and context, CI shall be defined as
             information within its described context, i.e. context
             becomes part of CI by describing it.  This described CI has
             to be converted into a general format, in which the initial
             meaning is not relevant to find matching CI.



   Contextinformation Coding (CIC)
             Contextinformation Coding (CIC) is that conversion and CIC
             means both, an encoding resp. decoding ruleset (CIC-
             Ruleset) for a particular type of CI and an concrete piece
             of encoded CI.  Every CIC has an identifier, called CIC-
             Number.  A CIC-Ruleset and all its encoded CI are linked by
             this CIC-Number.  Encoded CI has the form of a bit string,
             named CI-Content, and is one half of a pair of bit strings.
             The other half of the encoded CI, named CI-Mask, is used to
             define the accuracy of the searched match.  Then it is
             sufficient for a bitwise match of two pieces of CI, if both
             CI-Contents are equal or both CI-Masks mark them as non-
             relevant.  Let me illustrate this with an example.  Offer
             and Request are two communication roles, and location is a
             type of CI.  Offer says "I'm available for any Request with
             matching CI to contact me" and Request says "I'm searching
             for any Offer with matching CI".  Both have an exact
             information about their location and can define a
             surrounding area where Offer is available respectively
             Request is searching.  CI-Content, as the encoded location,



Stefan Hans               Expires July 12, 2016                 [Page 3]

Internet-Draft     Contextinformation Routing Networks      January 2016


             together with CI-Mask defines the surrounding area by
             marking bits of CI-Content as true in any case concerning
             the match.  Here the CI of Offer and Request are matching,
             if the location of one is in the surrounding area of the
             other and vice versa.



   Contextinformation Packet (CIP)
             Encoded CI is encapsulated in a datastructure named
             Contextinformation Packet (CIP).  A CIP is divided into
             three parts:

             *  Header Data

             *  Contextinformation

             *  Client Data

             All information which has to be transfered inside CRNs has
             to be encapsulated within CIPs.  CIP were created by client
             applications originally and send into a CRN.


   Contextinformation Routing (CIR)
             Contextinformation Routing (CIR) takes place in an overlay
             network built normally on top of the TCP/IP layer.  It is
             organized by using CI-Content as index.  It is oriented
             towards known concepts of network routing and others
             network principles as well as B-tree like datastructures.



2.  Motivation

   The motivation for this document is mainly the publication to prevent
   proprietary rights of third parties hindering the general
   availability of its described concepts.  Another additional
   motivation is the exchange with interested experts.  This draft is a
   first step to a possible formal recognition as an Internet Standard
   in the future.

3.  Contextinformation Coding (CIC)

   Contextinformation Coding (CIC), i.e. a CIC-Ruleset, defines an
   injective function between a set of CI and a set of permutations of a
   bit string (CI-Content) with a fixed byte length, i.e. there is
   exactly one bit string for every described content of the CIC-



Stefan Hans               Expires July 12, 2016                 [Page 4]

Internet-Draft     Contextinformation Routing Networks      January 2016


   Ruleset.  CI-Mask, the second bit string, is not defined individually
   by the CIC-Ruleset.  CI-Masks are not part of the CIC-Ruleset, but
   can be seen as part of encoded CI.

3.1.  Internal Structure

   The internal structure of CIC is self-referential.  This means an
   encoded CI can be part of other encoded CI and can contain other
   encoded CI.  Likewise a CIC-Ruleset can be part of other CIC-Rulesets
   and can contain other CIC-Rulesets.  A CIC needs at least one CIC-
   Number and additionally every exchangable internal CIC needs one CIC-
   Number for each possible CIC.  A CIC, not containing other CICs, is
   called CIC-Module.  The outermost CIC is called a Root-CIC.  A Root-
   CIC can be part of another CIC.  There it is no longer a Root-CIC.

3.1.1.  CIC-Brick

   Encoded CI consists of a pair of bit strings with its length rounded
   up to the next byte.  One of these byte pairs is called a CIC-Brick.
   One byte string is named CI-Content and the other is named CI-Mask.
   CI-Content stands either for encoded CI or for a CIC-Number.  One
   CIC-Brick can contain more than one items, i.e. encoded CI and CIC-
   Numbers.  The Root-CIC must have a length rounded up to the next byte
   lately.

             Figure 1.1.1 shows the structure of a CIC-Brick.

   0     1     2     3     4     5     6     7     8
   + ----+---- +-----+-----+-----+-----+-----+-----+
   |                  CI-Content                   |
   + ----+-----+-----+-----+-----+-----+-----+-----+
   |                   CI-Mask                     |
   + ----+-----+-----+-----+-----+-----+-----+-----+

   The calculation of a match between two CI-Bricks uses the following
   function resp. bitwise expression:

   match(Offer, Request) = ( NOT ( Offer-Content XOR Request-Content ) )
   OR ( Offer-Mask AND Request-Mask )

3.1.2.  CIC-Number

   Every CIC-Ruleset and all its encoded CI have an individual CIC-
   Number in common.  In general a CIC-Number can be well-known or
   temporary.  The CIC-Numbers of the Root-CICs must be well-known and
   they are part of the Contextinformation Packet specification (CIP-
   Specification).




Stefan Hans               Expires July 12, 2016                 [Page 5]

Internet-Draft     Contextinformation Routing Networks      January 2016


3.1.3.  CIC-Spam and CIC-Padding

   CIC-Spam describes bits of a CIC which have no meaning.  If encoded
   CI does not have the agreed length its CIC-Ruleset, it will be filled
   up with pairs CIC-Spam (0-bits or NULL values).  This is called CIC-
   Padding.  E.g. a CIC-Ruleset "ASCII character set" used for keyword
   matching needs an agreed length in bytes with CIC-Padding
   accordingly.  Other kind of CIC-Spam may only refer to CI-Content
   and, more frequent, to CI-Mask.  CIC-Spam can be used for other
   purposes theoretically.

3.2.  Limitations

   Contextinformation Packet (CIP) defines a maximum number of CI-
   Bricks.  But a CIC can use an unlimited number of CIPs in a row.
   Here, related to one CIP, the end point of the Contextinformation
   Routing (CIR), i.e. the matching communication partner, is the start
   point for the next CIR, related to the next CIP, and so on.  Seen
   from another perspective, every CIP lives in its own
   Contextinformation Routing Network (CRN) with its own CICs.  There
   the CIC finds its route through these CRNs.

3.3.  Boolean Operations

   Boolean operations are not applicable to CICs directly, but to their
   results sets.  I.e. instead to use boolean operations on encoded CI
   set operations have to be used on result sets.

      Boolean conjuntion (AND) equates to set intersection (INTERSECT)

      Boolean disjuntion (OR) equates to set union (UNION)

      Boolean negation (NOT) equates to set difference (MINUS)

   These set operations are executed outside the CRNs.

3.4.  Types of CIC-Rulesets
   It is neither specified how CIC-Rulesets should look like nor what
   exist any regulations how they interact with applications.  But some
   aspects of CIC-Rulesets shall be introduced here:

   Variability
             Is a CIC-Ruleset static or can it be changed?  Does the
             degree of freedom allow to introduce new parts into the
             existing ruleset or only to choose between existing ones?






Stefan Hans               Expires July 12, 2016                 [Page 6]

Internet-Draft     Contextinformation Routing Networks      January 2016


   Uniqueness
             How protected is the encoded CI, especially the CIC-Number,
             from being misinterpreted or misused? (!!Insert of new or
             only authenticated update of one offer!!)



   Availability
             Availability, i.e. CI can be hidden by using CIC-Spam as an
             unique identifier only known by certain communication
             partners.



   Degree of linkage
             Degree of linkage to the application, e.g. the CIC is
             simply a unique identifier of the application or the CIC
             has no knowing about an application at all.



3.5.  Deployment of CIC-Rulesets

   CRNs provide an infrastructure for CIC-Rulesets.  This can, but must
   not, be used for distributing CIC-Rulesets.  Any other way is
   possible according to the intended availability.

3.6.  Emergence and Future Use

   Due to the simple basic principles, the broad applicability and the
   unrestricted length of CI, the resulting codings and the applications
   using them can not be foreseen, provided that CRNs will be used
   numerously.  The resulting emergence is probably the key aspect of
   CRNs.  Even the main application principles of today are possibly not
   complete or major relevant ones are missing still.  Therefore the
   specifications shall leave room for future use.

4.  Contextinformation Packet (CIP)

   For the concepts of the CIP's main parts see the following sections.
   For detailed CIP specification see Internet-Draft "Contextinformation
   Paket (CIP) Specification for Contextinformation Routing Networks
   (CRNs)" [CIP_Spec].








Stefan Hans               Expires July 12, 2016                 [Page 7]

Internet-Draft     Contextinformation Routing Networks      January 2016


4.1.  Header Data

   The header data concern all metadata not directly related to CIC.
   The header data starts with a part with fixed size and static
   structure followed by a dynamic part.  The static part defines the
   dynamic part's type and its length.

4.2.  Contextinformation

   The Contextinformation part has leading bytes to specify the type and
   one byte for the number of CI-Bricks following.  A CI-Brick is pair
   of bit strings with a length of one byte, i.e. one byte CI-Content
   linked with one byte of CI-Mask.  The type specified by the first
   bytes is like a meta or root CIC-Number and is mainly free for future
   use.

4.3.  Client Data

   The client data starts with a part with fixed size and static
   structure followed by a dynamic part.  The static part only defines
   the dynamic part's type and its length.

5.  Contextinformation Routing (CIR)

   For the main concepts of the CIR see the following sections.  For
   detailed CIR specification see Internet-Draft "Contextinformation
   Routing (CIR) Specification for Contextinformation Routing Networks
   (CRNs)" [CIR_Spec].

5.1.  Overlay Network

   CIR can be build on any digital network.  Especially internet,
   intranets and peer-to-peer networks on the TCP/IP layer.

5.2.  Encoded CI Routing

   This routing is oriented on the CI-Bricks using CI-Content as index.
   If a bit of CI-Mask is true, the routing will be split to follow both
   pathes of the indexing.

5.3.  Client's Network Address Updates

   To optimize the availibility of the clients in volatile networks,
   e.g. mobile devices in the internet, CRNs have a procedure to check
   the availability the clients' address information and the clients
   have a procedure to update these.





Stefan Hans               Expires July 12, 2016                 [Page 8]

Internet-Draft     Contextinformation Routing Networks      January 2016


5.4.  CIC-Ruleset Request Routing

   Similar to the encoded CI routing CRNs provide an infrastructure to
   store and retrieve CIC-Rulesets.

5.5.  Metadata

   CRNs communicate aggregations and other metadata, if asked for or if
   the resultset of matching CI is too large.

6.  Informative References

   [CIP_Spec]
              Hans, S., "Contextinformation Paket (CIP) Specification
              for Contextinformation Routing Networks (CRNs)", Januar
              2016,
              <https://github.com/stefanhans/ContextRouting/raw/master/
              RFC/DraftRFC_CIP_Specification.txt>.

   [CIR_Spec]
              Hans, S., "Contextinformation Routing (CIR) Specification
              for Contextinformation Routing Networks (CRNs)", Januar
              2016,
              <https://github.com/stefanhans/ContextRouting/raw/master/
              RFC/DraftRFC_CIR_Specification.txt>.

Author's Address

   Stefan Hans
   Rotwandstr.
   Baldham  85598
   Germany

   Email: uni@stefan-hans.de

















Stefan Hans               Expires July 12, 2016                 [Page 9]
