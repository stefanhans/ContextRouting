



Network Working Group                                        Stefan Hans
Internet-Draft                                          December 9, 2015
Intended status: Experimental
Expires: June 11, 2016


                   Contextinformation Routing Network
                        DraftRFC_ContextRouting

Abstract

   The Contextinformation Routing Network is a communication framework
   enabling a generic service to join matching contextinformation
   respectively its communication partners.  The communication partners
   send and receive data packets containing, inter alia, encoded
   contextinformation in the form of paired bit strings.  The network
   uses the TCP/IP layer to transport the data packets and needed meta
   information.  It compares the paired bit strings without information
   about its meaning.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on June 11, 2016.

Copyright Notice

   Copyright (c) 2015 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must



Stefan Hans               Expires June 11, 2016                 [Page 1]

Internet-Draft               Context Routing               December 2015


   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Context Datagram  . . . . . . . . . . . . . . . . . . . . . .   3
     2.1.  Header  . . . . . . . . . . . . . . . . . . . . . . . . .   3
       2.1.1.  sg_request  . . . . . . . . . . . . . . . . . . . . .   3
       2.1.2.  sg_profile  . . . . . . . . . . . . . . . . . . . . .   3
       2.1.3.  version . . . . . . . . . . . . . . . . . . . . . . .   4
       2.1.4.  channel . . . . . . . . . . . . . . . . . . . . . . .   4
       2.1.5.  UUID  . . . . . . . . . . . . . . . . . . . . . . . .   4
       2.1.6.  IP address  . . . . . . . . . . . . . . . . . . . . .   4
       2.1.7.  IP port . . . . . . . . . . . . . . . . . . . . . . .   4
       2.1.8.  time  . . . . . . . . . . . . . . . . . . . . . . . .   4
       2.1.9.  add_type  . . . . . . . . . . . . . . . . . . . . . .   4
       2.1.10. add_size  . . . . . . . . . . . . . . . . . . . . . .   4
       2.1.11. additional data . . . . . . . . . . . . . . . . . . .   4
       2.1.12. Service Groups  . . . . . . . . . . . . . . . . . . .   5
     2.2.  Context . . . . . . . . . . . . . . . . . . . . . . . . .   5
       2.2.1.  type  . . . . . . . . . . . . . . . . . . . . . . . .   5
       2.2.2.  content . . . . . . . . . . . . . . . . . . . . . . .   5
       2.2.3.  mask  . . . . . . . . . . . . . . . . . . . . . . . .   6
       2.2.4.  add_size  . . . . . . . . . . . . . . . . . . . . . .   6
       2.2.5.  additional data . . . . . . . . . . . . . . . . . . .   6
     2.3.  Data  . . . . . . . . . . . . . . . . . . . . . . . . . .   6
       2.3.1.  add_size  . . . . . . . . . . . . . . . . . . . . . .   6
       2.3.2.  text_type . . . . . . . . . . . . . . . . . . . . . .   7
       2.3.3.  text  . . . . . . . . . . . . . . . . . . . . . . . .   7
       2.3.4.  additional data . . . . . . . . . . . . . . . . . . .   7
     2.4.  Context Bricks  . . . . . . . . . . . . . . . . . . . . .   7
       2.4.1.  content . . . . . . . . . . . . . . . . . . . . . . .   7
       2.4.2.  mask  . . . . . . . . . . . . . . . . . . . . . . . .   7
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .   7

1.  Introduction

   First of all I want to describe the term of contextinformation as it
   is used here.  Information has a context and the separation between
   information and its context is fuzzy and ultimately academic.
   Therefore no distinction between information and context is made in
   this regard, and both together are defined as contextinformation.
   Contextinformation is a quite unlimited form which can describe
   virtually all describable.  Similiarly, every contextinformation can
   be encoded or digitalized, if the size of the encoding is not
   limited.  But in practice one has to cope with another aspect of



Stefan Hans               Expires June 11, 2016                 [Page 2]

Internet-Draft               Context Routing               December 2015


   contextinformation, which will be named inaccuracy here.  For a
   matching contextinformation I want to define a certain inaccuracy.
   For this a kind of bit mask is defined.  So exist paired bit strings
   representing an encoded contextinformation and the inaccuracy of the
   contextinformation searched.

2.  Context Datagram

   Datastructure of the context datagram. (max.  MTU 1200 Byte)

2.1.  Header

       Figure 2.1.1 shows the header section of the context datagram

   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | sg_request (1)| sg_profile (1)|  version (1)  |  channel (1)  | |
   |                                                               | |
   |                            UUID (16)                          | |
   |                                                               | |
   |                                                               | fix
   |                          IP address (4)                       | |
   |            IP port (2)        |                               | |
   |                            time (8)                           | |
   |                               |  add_type (1) |  add_size (1) |---
   | ............................................................  | |
   | .............. additional data up to 255 bytes .............  | opt
   | ............................................................  | |
   +---------------------------------------------------------------+

   Format of datagrams containing context information.  Field sizes are
    given in octets.  Unless otherwise specified, fields contain binary
    integers, in normal Internet order with the most-significant octet
                first.  Each tick mark represents one bit.

2.1.1.  sg_request

   The Service Groups Request shows the relevant service_groups
   requested by the datagram.  The services which are requested by this
   datagram have the appropriate bit switched on (see figure 2.1.2).

2.1.2.  sg_profile

   The Service Groups Profile shows all available service groups of the
   sender of this datagram.  The services which are available have the
   appropriate bit switched on (see figure 2.1.2).




Stefan Hans               Expires June 11, 2016                 [Page 3]

Internet-Draft               Context Routing               December 2015


2.1.3.  version

   The version of the Context Datagram Specification of this datagram.
   It has a left 4-bit part which represents the major number and a
   right 4-bit part which represents the minor number

2.1.4.  channel

   The channel can be used to separate context packet traffic in the
   future.  The value for the core functionality is 1 which has to be
   used at the moment.  The value 0 is reserved for testing and all
   other values has no meaning so far.

2.1.5.  UUID

   The UUID is the unique identifier for the datagram.

2.1.6.  IP address

   A 32-bit IP address in Network Byte Order.

2.1.7.  IP port

   A 16-bit port number in Network Byte Order.

2.1.8.  time

   Unix time of datagram introduction, i.e. the number of seconds
   between 00:00:00 UTC on 1 January 1970 and the moment the datagram
   arrived in the context network for the first time.

2.1.9.  add_type

   The type of the following data of the datagram.  The value for the
   core functionality is 1 which has to be used at the moment.  The
   value 0 is reserved for testing and all other values has no meaning
   so far.

2.1.10.  add_size

   The size of the following context data of the datagram, i.e. the
   number of Context Bricks.

2.1.11.  additional data

   The additional data as specified in type and size.  The data for the
   core functionality is the service_id which has to be used at the
   moment (see 2.1.2).



Stefan Hans               Expires June 11, 2016                 [Page 4]

Internet-Draft               Context Routing               December 2015


2.1.12.  Service Groups

   'Service Groups' describes the role(s) in the Context Network.

   Figure 2.1.2 shows the service groups and its defined first two bits.

   0         1         2  ---------------------------------------   8
   +---------+---------+--------------------------------------------+
   | client  | gateway |           not yet defined                  |
   +--------------------------------------------------------------- +

     Thus the integer 1 means 'client', 2 means 'gateway' and 3 means
                                   both.

2.2.  Context

       Figure 2.2.1 shows the context (brick) section of the context
    datagram.  A context brick consists of two bytes: content und mask.

   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |   type (1)    |  content (1)  |   mask (1)    |  add_size (1) | fix
   +---------------------------------------------------------------+---
   | ............................................................  | |
   | .............. additional data up to 510 bytes .............  | opt
   | .............. i.e. up to 255 context bricks  ..............  | |
   | ............................................................  | |
   +---------------------------------------------------------------+

   Format of datagrams containing context information.  Field sizes are
    given in octets.  Unless otherwise specified, fields contain binary
    integers, in normal Internet order with the most-significant octet
                                  first.

2.2.1.  type

   The type can be used to specify different context designs in the
   future.  The value for the core functionality is 1 which has to be
   used at the moment.  The value 0 is reserved for testing and all
   other values has no meaning so far.

2.2.2.  content

   The content is the first part of a Context Brick (see section 2.4).
   It is used in the core functionality to specify the kind of context
   coding.




Stefan Hans               Expires June 11, 2016                 [Page 5]

Internet-Draft               Context Routing               December 2015


2.2.3.  mask

   The mask is the second part of a Context Brick (see section 2.4).  It
   is not used in the core functionality so far.

2.2.4.  add_size

   The number of Context Bricks as additional data (up to 255).

2.2.5.  additional data

   The additional data contains the number of Context Bricks (see
   section 2.4) as specified in add_size.

2.3.  Data

   The following figure shows the data section of the context datagram.
     This section has no meaning for the Context Routing itself.  The
    meaning of this section is only relevant to the clients.  Therefore
      the following structure has to be seen as a default and can be
     changed, if another specification is agreed between the concerned
   clients.  The 'add_size' has to be as if the default structure would
         be actual, i.e. available is then 'add_size + 141' bytes.

   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |  add_size (1) | text_type (1) |                               | |
   |                                                               | |
   |                          text (140)                           | fix
   |                                                               | |
   +---------------------------------------------------------------+---
   | ............................................................  | |
   | ........ additional data up to 255 bytes (add_size) ........  | opt
   | ............................................................  | |
   +---------------------------------------------------------------+

   Format of datagrams containing context information.  Field sizes are
    given in octets.  Unless otherwise specified, fields contain binary
    integers, in normal Internet order with the most-significant octet
   first.  Each tick mark represents one bit.  The area for 'text (140)'
                     does not correspond to 140 bytes.

2.3.1.  add_size

   The size of additional data in bytes.





Stefan Hans               Expires June 11, 2016                 [Page 6]

Internet-Draft               Context Routing               December 2015


2.3.2.  text_type

   The meaning or format of the following text, e.g. plain text, URL.

2.3.3.  text

   A fixed sized text, that means it has possibly to be padded by blanks
   up to 140 characters.

2.3.4.  additional data

   Any data in a size as specified by 'add_size', i.e. limited by 255.

2.4.  Context Bricks

   A Context Brick is a pair of bytes in particular content and mask.
   It describes a piece of information and the relevance of its
   exactness.  The meaning of the Context Bricks is not known by the
   Context Network.

2.4.1.  content

   The content represents an exact information encoded in a byte.

2.4.2.  mask

   The mask represents the relevance of the exactness of the content in
   a byte.  For that a 1 makes the corresponding bit of the content
   irrelevant.  Two bits are corresponding, if they are at the same
   place in the byte.

Author's Address

   Stefan Hans
   Rotwandstr.
   Baldham  85598
   Germany

   Email: uni@stefan-hans.de












Stefan Hans               Expires June 11, 2016                 [Page 7]
