



Network Working Group                                        Stefan Hans
Internet-Draft                                         December 19, 2015
Intended status: Experimental
Expires: June 21, 2016


         Concepts of Contextinformation Routing Networks (CRNs)
                        DraftRFC_ContextRouting

Abstract

   Contextinformation Routing Network (CRN) is a communication framework
   enabling a universal service to join matching contextinformation
   respectively its communication partners.  This document describes the
   concepts of CRNs by explaining its main components, which are

   o  Contextinformation (CI)

   o  Contextinformation Coding (CIC)

   o  Contextinformation Packet (CIP)

   o  Contextinformation Routing (CIR)

   This document does not cover concrete specifications or requirements
   in detail.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on June 21, 2016.








Stefan Hans               Expires June 21, 2016                 [Page 1]

Internet-Draft     Contextinformation Routing Networks     December 2015


Copyright Notice

   Copyright (c) 2015 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Contextinformation Coding (CIC) . . . . . . . . . . . . . . .   4
     2.1.  Structure and Limitations . . . . . . . . . . . . . . . .   4
     2.2.  Types . . . . . . . . . . . . . . . . . . . . . . . . . .   4
     2.3.  Distinction and Deployment  . . . . . . . . . . . . . . .   4
   3.  Contextinformation Packet (CIP) . . . . . . . . . . . . . . .   4
     3.1.  Header Data . . . . . . . . . . . . . . . . . . . . . . .   4
     3.2.  Contextinformation  . . . . . . . . . . . . . . . . . . .   5
     3.3.  Client Data . . . . . . . . . . . . . . . . . . . . . . .   5
   4.  Contextinformation Routing (CIR)  . . . . . . . . . . . . . .   5
     4.1.  Structure and Limitations . . . . . . . . . . . . . . . .   5
     4.2.  Types . . . . . . . . . . . . . . . . . . . . . . . . . .   5
     4.3.  Distinction and Deployment  . . . . . . . . . . . . . . .   5
   5.  Informative References  . . . . . . . . . . . . . . . . . . .   5
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .   5

1.  Introduction

   The main ideas had emerged while thinking about Context Aware
   Services and trying to find answers to the following questions:

      How can a framework connect communication partners with matching
      communication interests and context?

      How can it be open for new types of interests and context to
      anybody?

      How can it be organized to maximize the availabilty of the service
      and to minimize the customizing effort for its clients?





Stefan Hans               Expires June 21, 2016                 [Page 2]

Internet-Draft     Contextinformation Routing Networks     December 2015


   In an attempt at a definition of information and context it has
   turned out that there is no useful clear distinction between the two.
   Thus the term of Contextinformation (CI) means information within its
   described context, i.e. context becomes part of CI by describing it.

   Here the universal approach to find matching CI is that each kind of
   CI has to be encoded as bit string individually.  Contextinformation
   Coding (CIC) means both, an encoding resp. decoding protocol (CIC-
   Protocol) for a particular type of CI and an concrete piece of
   encoded CI.  Every CIC has a unique identifier, called CIC-Number.  A
   CIC-Protocol and all its encoded CI are linked by a unique CIC-
   Number.  Encoded CI in the form of a bit string, named CI-Content, is
   one half of a pair of bit strings.  The other half of the encoded CI,
   named CI-Mask, is used to define the accuracy of the searched match.
   Then it is sufficient for a match, if CI-Content is equal or both CI-
   Masks mark them as non-relevant.

   Let me illustrate this with an example.  Offer and Request are two
   communication roles, and location is a type of CI.  Offer says "I'm
   available for any Request witch matching CI to contact me" and
   Request says "I'm searching for any Offer with matching CI".  Both
   have an exact information about their location and can define a
   surrounding area where Offer is available respectively Request is
   searching.  CI-Content, as encoded location CI, defines with CI-Mask
   the surrounding area by marking a bit of CI-Content as true in any
   case concerning the match.  This has the consequence that the
   location is always included in the surrounding area.  Here the CI of
   Offer and Request are matching, if the exact location of one is in
   the surrounding area of the other and vice versa.

   Encoded CI is encapsulated in a datastructure named
   Contextinformation Packet (CIP).  It is divided in three parts:

   o  Header Data

   o  Contextinformation

   o  Client Data

   All information which has to be transfered inside CRNs has to be
   encapsulated within CIPs.  CIP were created by client applications
   originally and send into a CRN.

   Contextinformation Routing (CIR) takes place in an overlay network
   built normally on top of the TCP/IP layer.  It is organized by using
   CI-Content as index and represents a virtual tree of CIC.  It is
   oriented towards known concepts of network routing and others more.




Stefan Hans               Expires June 21, 2016                 [Page 3]

Internet-Draft     Contextinformation Routing Networks     December 2015


2.  Contextinformation Coding (CIC)

   A CIC-Protocol defines an injective function between this CI and an
   encoded CI-Content, i.e. there is exactly one bit string for every
   discribed content of the CIC-Protocol.  Together with the unique CIC-
   Numbers every CI has xxxxx CI-Mask, the second bit string, is not
   defined individually by the CIC-Protocol.  One could now determine a
   specification for this purpose as one example of CI.  Let me
   introduce the concept of Contextinformation Coding (CIC) instead.
   CIC means both a definition of an encoding resp. decoding protocol
   for a particular kind of CI and an encoded concrete piece of CI.  For
   unambiguity the terms "CIC-Protocol" and "encoded CI" will be used in
   this document, if needed.  A CIC-Protocol and all its encoded CI is
   linked by a CIC-Number.  Applied to our location based example we
   would determine a specification for this purpose, call it a CIC and
   assign a free CIC-Number to it.  Then all encoded CI is processed
   directly by the same algorithm to find matching CI, i.e. without an
   idea of the certain meaning of the used CIC.  Therefore CI will be
   encoded in a pair of bit strings representing CI-Content and CI-Mask.
   Looking at one bit then it is sufficient for a match, if CI-Content
   is equal or both CI-Masks mark them as non-relevant.  Then a
   performant bitwise operation can be executed to find matching CI.

2.1.  Structure and Limitations

   CIC contains of CI-Bricks

2.2.  Types

   CIC contains of CI-Bricks

2.3.  Distinction and Deployment

   CIC contains of CI-Bricks

3.  Contextinformation Packet (CIP)

   For the concepts of the CIP's main parts see the following sections.
   For detailed CIP specification see Internet-Draft "Contextinformation
   Paket (CIP) Specification for Contextinformation Routing Networks
   (CRNs)" [CIP_Spec].

3.1.  Header Data

   The header data start with a part with fixed size and structure
   followed by a dynamic part.





Stefan Hans               Expires June 21, 2016                 [Page 4]

Internet-Draft     Contextinformation Routing Networks     December 2015


3.2.  Contextinformation

3.3.  Client Data

   The header data start with a part with fixed size and structure
   followed by a dynamic part.

4.  Contextinformation Routing (CIR)

   Based on any describable a CIC-Protocol defines an injective function
   between this CI and an encoded CI-Content, i.e. there is exactly one
   bit string for every discribed content of the CIC-Protocol.  CI-Mask,
   the second bit string, is not defined individually by the CIC-
   Protocol.

4.1.  Structure and Limitations

   CIC contains of CI-Bricks

4.2.  Types

   CIC contains of CI-Bricks

4.3.  Distinction and Deployment

   CIC contains of CI-Bricks

5.  Informative References

   [CIP_Spec]
              Hans, S., "Contextinformation Paket (CIP) Specification
              for Contextinformation Routing Networks (CRNs)", Januar
              2016,
              <https://github.com/stefanhans/ContextRouting/raw/master/
              RFC/DraftRFC_CIP_Specification.txt>.

Author's Address

   Stefan Hans
   Rotwandstr.
   Baldham  85598
   Germany

   Email: uni@stefan-hans.de







Stefan Hans               Expires June 21, 2016                 [Page 5]
